# Scaffolding generated by Casein v5.0.1.0

module Casein
  class StudentGroupsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Student groups'
  		@student_groups = StudentGroups.order(sort_order(:name)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View student groups'
      @student_groups = StudentGroups.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new student groups'
    	@student_groups = StudentGroups.new
    end

    def create
      @student_groups = StudentGroups.new student_groups_params
    
      if @student_groups.save
        flash[:notice] = 'Student groups created'
        redirect_to casein_student_groups_index_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new student groups'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update student groups'
      
      @student_groups = StudentGroups.find params[:id]
    
      if @student_groups.update_attributes student_groups_params
        flash[:notice] = 'Student groups has been updated'
        redirect_to casein_student_groups_index_path
      else
        flash.now[:warning] = 'There were problems when trying to update this student groups'
        render :action => :show
      end
    end
 
    def destroy
      @student_groups = StudentGroups.find params[:id]

      @student_groups.destroy
      flash[:notice] = 'Student groups has been deleted'
      redirect_to casein_student_groups_index_path
    end
  
    private
      
      def student_groups_params
        params.require(:student_groups).permit(:name, :description, :photo, :website)
      end

  end
end